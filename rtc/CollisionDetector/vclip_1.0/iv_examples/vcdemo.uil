!0x000102EFFFF
 ! Generated by Silicon Graphic's RapidApp.
 !
 !
 ! RapidApp 1.2.
 !
module main_uil
version = 'V1.0'
names = case_sensitive
!(BX) bx_info("header_ext", "h" )
!(BX) bx_info("source_ext", "C" )
!(BX) bx_info("aux_merge_style", "merge" )
!(BX) bx_info("makefile_merge_style", "merge" )
!(BX) bx_info("derived_merge_style", "merge" )
!(BX) bx_info("ui_merge_style", "merge" )
!(BX) bx_info("target_system", "SGI" )
!(BX) bx_info("prompt_for_unnamed_classes", true )
!(BX) bx_info("inst_directory", "." )
!(BX) bx_info("desktop_directory", "." )
!(BX) bx_info("workspace_tag" )
!(BX) bx_info("header_directory", "." )
!(BX) bx_info("generate_vkapp_subclass", false )
!(BX) bx_info("generate_library", false )
!(BX) bx_info("vkapp_subclass_name" )
!(BX) bx_info("library_header_directory", "(null)" )
!(BX) bx_info("library_name" )
!(BX) bx_info("comment_file" )
!(BX) bx_info("app_name", "vcdemo" )
!(BX) bx_info("c++_pixmaps", "pixmaps.h", true )
!(BX) bx_info("c++_makefile", "Makefile", true )
!(BX) bx_info("do_insertion_merge", true )
!(BX) bx_info("verbose_codegen", true )
!(BX) bx_info("make_backups", true )
!(BX) bx_info("prune_dimensions", false )
!(BX) bx_info("use_irix_gl", false )
!(BX) bx_info("use_ez", true )
!(BX) bx_info("generate_unimplemented", true )
!(BX) bx_info("no_standalone_classes", true )
!(BX) bx_info("generate_default_resources", true )
!(BX) bx_info("use_cvstatic", false )
!(BX) bx_info("use_runonce", false )
!(BX) bx_info("message_system", "none" )
!(BX) bx_info("license_system", "none" )
!(BX) bx_info("generate_alternate_constructor", true )
!(BX) bx_info("use_license", false )
!(BX) bx_info("use_inventor_loop", false )
!(BX) bx_info("use_pure_virtuals", false )
!(BX) bx_info("put_windows_in_library", false )
!(BX) bx_info("use_tooltalk", false )
!(BX) bx_info("source_code_control_system", "none" )
!(BX) bx_info("viewkit_code_version", "1.2" )



!(BX)object topLevelShell : TopLevelShell widget {
!(BX)    arguments {
!(BX)        XmNtitle = 'V-Clip Collision Detection';
!(BX)        XmNiconName = 'V-Clip Collision Detection';
!(BX)        XmNx = 514;
!(BX)        XmNy = 257;
!(BX)        XmNwidth = 734;
!(BX)        XmNheight = 600;
!(BX)    };
!(BX)    controls {
!(BX)       managed VkWindow vkwindow;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object vkwindow : VkWindow widget {
    arguments {
!(BX)   _XmNtitle = 'V-Clip Collision Detection';
        XmNforceChildClass = true;
        XmNautoRouteCallbacks = true;
!(BX)   _SgNheaderList = '<Vk/VkApp.h>,<Vk/VkFileSelectionDialog.h>, <Vk/VkSubMenu.h>,<Vk/VkRadioSubMenu.h>,<Vk/VkMenuItem.h>';
!(BX)   _SgNshowHelp = true;
        XmNwidth = 734;
        XmNheight = 600;
    };
    controls {
       managed XmMenuBar menuBar;
       managed SgHorzPanedWindow hpaned;
    };
    callbacks {
    };
};

object menuBar : XmMenuBar widget {
    arguments {
        XmNmenuHelpWidget = XmCascadeButton helpPane;
        XmNwidth = 734;
        XmNheight = 28;
    };
    controls {
       managed XmCascadeButton filePane;
       managed XmCascadeButton helpPane;
    };
    callbacks {
    };
};

object filePane : XmCascadeButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("File");
!(BX)   _XmNmnemonic = keysym("F");
        XmNwidth = 43;
        XmNheight = 24;
    };
    controls {
       unmanaged XmPulldownMenu pulldownMenu;
    };
    callbacks {
    };
};

object pulldownMenu : XmPulldownMenu widget {
    arguments {
        XmNwidth = 127;
        XmNheight = 56;
    };
    controls {
       managed XmPushButtonGadget openButton;
       managed XmSeparatorGadget separator1;
       managed XmPushButtonGadget exitButton;
    };
    callbacks {
    };
};

object openButton : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Open...");
!(BX)   _XmNmnemonic = keysym("O");
!(BX)   _XmNaccelerator = 'Ctrl<Key>O';
!(BX)   _XmNacceleratorText = compound_string("Ctrl+O");
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure openFile();
    };
};

object separator1 : XmSeparatorGadget widget {
    arguments {
    };
    controls {
    };
    callbacks {
    };
};

object exitButton : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Exit");
!(BX)   _XmNmnemonic = keysym("x");
!(BX)   _XmNaccelerator = 'Ctrl<Key>Q';
!(BX)   _XmNacceleratorText = compound_string("Ctrl+Q");
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure quit();
    };
};

object helpPane : XmCascadeButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Help");
!(BX)   _XmNmnemonic = keysym("H");
        XmNwidth = 50;
        XmNheight = 24;
    };
    controls {
       unmanaged XmPulldownMenu pulldownMenu3;
    };
    callbacks {
    };
};

object pulldownMenu3 : XmPulldownMenu widget {
    arguments {
        XmNwidth = 225;
        XmNheight = 128;
    };
    controls {
       managed XmPushButtonGadget help_click_for_help;
       managed XmPushButtonGadget help_overview;
       managed XmPushButtonGadget help_index;
       managed XmPushButtonGadget help_keys_and_short;
       managed XmSeparatorGadget separator;
       managed XmPushButtonGadget help_prod_info;
    };
    callbacks {
    };
};

object help_click_for_help : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Click For Help");
!(BX)   _XmNmnemonic = keysym("C");
!(BX)   _XmNaccelerator = 'Shift<Key>F1';
!(BX)   _XmNacceleratorText = compound_string("Shift+F1");
    };
    controls {
    };
    callbacks {
    };
};

object help_overview : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Overview");
!(BX)   _XmNmnemonic = keysym("O");
    };
    controls {
    };
    callbacks {
    };
};

object help_index : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Index");
!(BX)   _XmNmnemonic = keysym("I");
    };
    controls {
    };
    callbacks {
    };
};

object help_keys_and_short : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Keys and Shortcuts");
!(BX)   _XmNmnemonic = keysym("K");
    };
    controls {
    };
    callbacks {
    };
};

object separator : XmSeparatorGadget widget {
    arguments {
    };
    controls {
    };
    callbacks {
    };
};

object help_prod_info : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Product Information");
!(BX)   _XmNmnemonic = keysym("P");
    };
    controls {
    };
    callbacks {
    };
};

object hpaned : SgHorzPanedWindow widget {
    arguments {
        XmNwidth = 734;
        XmNheight = 572;
    };
    controls {
       managed SoXtExaminerViewer viewer;
       managed XmBulletinBoard bulletinBoard;
    };
    callbacks {
    };
};

object viewer : SoXtExaminerViewer widget {
    arguments {
        XmNdecoration = true;
        XmNbufferingType = BUFFER_DOUBLE;
        XmNborder = true;
        XmNlibraryName = '/usr/lib/RapidApp/lib/libcomponent.so';
        XmNcreationFunction = 'CreateSceneViewer';
        XmNincludePath = '<Inventor/Xt/viewers/SoXtExaminerViewer.h>';
        XmNlinkLib = '-lInventorXt';
        XmNloadLib = 'libInventorXt.so';
        XmNeditFunction = 'EditExaminerViewer';
        XmNisInventorComponent = true;
        XmNisLiveComponent = true;
        XmNwidth = 588;
        XmNheight = 566;
    };
    controls {
    };
    callbacks {
    };
};

object bulletinBoard : XmBulletinBoard widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNwidth = 132;
        XmNheight = 566;
    };
    controls {
       managed XmScale speedScale;
       managed XmScale scale;
       managed XmToggleButton autoToggle;
    };
    callbacks {
    };
};

object autoToggle : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelType = XmSTRING;
!(BX)   _XmNlabelString = compound_string("auto move");
        XmNx = 10;
        XmNy = 470;
        XmNwidth = 105;
        XmNheight = 26;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure autoToggleCB();
    };
};

object scale : XmScale widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNshowValue = true;
        XmNx = 630;
        XmNy = 85;
        XmNwidth = 40;
        XmNheight = 34;
    };
    controls {
    };
    callbacks {
    };
};

object speedScale : XmScale widget {
    arguments {
        XmNsliderVisual = XmSHADOWED;
        XmNslidingMode = XmSLIDER;
        XmNvalue = 50;
        XmNorientation = XmVERTICAL;
!(BX)   _XmNtitleString = compound_string("speed");
        XmNshowValue = true;
        XmNx = 12;
        XmNy = 55;
        XmNwidth = 110;
        XmNheight = 330;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure speedScaleCB();
        XmNdragCallback = procedure speedScaleCB();
    };
};
end module;
